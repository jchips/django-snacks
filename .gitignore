Source: https://github.com/github/gitignore/blob/master/Python.gitignore

# User generated
ENV/
.vscode
.idea
.DS_Store
.history


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
.pytest_cache/

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
.static_storage/
.media/
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/

# js
node_modules/
.next/

# poetry
poetry.lock

# Python bytecode and cache
__pycache__/
*.py[cod]
*$py.class

# Django specific
*.log
*.pot
*.pyc
db.sqlite3
media/
static/CACHE/

# Tailwind CSS CLI
# Assuming you're using Tailwind CLI to generate output.css from input.css
# and you don't want to track generated CSS
static/src/output.css

# Node-related files (if youâ€™re using Tailwind with npm)
node_modules/
package-lock.json
yarn.lock

# Python virtual environment
venv/
.env
.env.*

# Editor and system files
.idea/
.vscode/
.DS_Store
Thumbs.db
